% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{checkVal}
\alias{checkVal}
\title{Streamlined value validator}
\usage{
checkVal(
  n,
  type = "r",
  min = NA,
  max = NA,
  minex = NA,
  maxex = NA,
  null = FALSE,
  na = FALSE,
  define = "",
  name
)
}
\arguments{
\item{n}{Value to be checked (if given missing, throw missing error)}

\item{type}{String representing desired type of values. Specifically:
\itemize{
\item "r" = real number (float, double, integer, etc)
\item "i" = integer
\item "l" = logical (TRUE, FALSE)
\item "f" = function (type "closure")
}}

\item{min}{Inclusive lower bound of quantiles}

\item{max}{Inclusive upper bound of quantiles}

\item{minex}{Exclusive lower bound of quantiles}

\item{maxex}{Exclusive upper bound of quantiles}

\item{null}{If TRUE, let NULL be a valid value}

\item{na}{If TRUE, let NA be a valid value}

\item{define}{Additional string to further define what the variable is}

\item{name}{Variable name for q1. If missing, retrieve via deparse}
}
\value{
None. Terminates program with uniform stop if invalid.
}
\description{
Checks to see if a variable is valid given criteria.
If it is not, stop the execution with a standardized error.
}
\details{
Notice that will be q1 = q2 is invalid, as the range is 0.
}
\author{
Barry Lawson (\email{blawson@richmond.edu}), \cr
Larry Leemis (\email{leemis@math.wm.edu}), \cr
Vadim Kudlay (\email{vadim.kudlay@richmond.edu})
}
\keyword{internal}
